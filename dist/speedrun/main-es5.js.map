{"version":3,"sources":["webpack:///src/app/services/auth.guard.ts","webpack:///src/app/studio/studio-main-page.component.html","webpack:///src/app/studio/studio-main-page.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/studio/studio-new.component.ts","webpack:///src/app/studio/studio-new.component.html","webpack:///src/navbar/navbar.component.html","webpack:///src/navbar/navbar.component.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/studio.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/environments/environment.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthGuard","router","afAuth","route","state","Promise","resolve","reject","onAuthStateChanged","user","console","log","navigate","StudioMainPageComponent","studioService","hairdresserType","makeupType","allType","presentedStudios","allStudios","hairdresserStudios","makeupStudios","getStudios","subscribe","s","studioType","loadMakeupStudios","loadHairdresserStudios","paramMap","params","get","loadAllStudios","filter","studio","type","HomeComponent","signOut","StudioNewComponent","newStudio","studioName","location","ownerUsername","service","businessTypes","studioForm","required","serviceForm","imageForm","value","addStudio","newService","title","description","reservations","push","event","addService","NavbarComponent","authState","DashboardComponent","AppComponent","StudioService","db","list","valueChanges","getNewId","then","newId","set","toString","error","query","once","snapshot","highestNumber","forEach","userSnapshot","userId","parseInt","key","isNaN","nextAvailableNumber","username","confirmed","startDate","endDate","services","AppModule","initializeApp","firebaseConfig","AuthService","userLoggedIn","email","password","signInWithEmailAndPassword","code","isValid","message","createUserWithEmailAndPassword","result","emailLower","toLowerCase","sendEmailVerification","SignupComponent","authService","firebaseErrorMessage","signupForm","invalid","signupUser","signup","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","LoginComponent","loginForm","loginUser","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","webpackEmptyAsyncContext","req","e","Error","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router, private afAuth: AngularFireAuth) {\r\n\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.afAuth.onAuthStateChanged((user) => {\r\n                if (user) {\r\n\r\n                    // if (!user.emailVerified)                            // if the user hasn't verified their email, send them to that page\r\n                    //     this.router.navigate(['/verify-email']);\r\n\r\n                    resolve(true);\r\n                } else {\r\n                    console.log('Auth Guard: user is not logged in');\r\n                    this.router.navigate(['/']);                   // a logged out user will always be sent to home\r\n                    resolve(false);\r\n                }\r\n            });\r\n        });\r\n    }\r\n  \r\n}\r\n","\r\n<div class=\"main-content\">\r\n  <div class=\"blurred-background\"></div>\r\n  <div class=\"studio-card\" *ngFor=\"let studio of presentedStudios\">\r\n    <h3>{{ studio.studioName}}</h3>\r\n    <p><strong>Lokalizacja:</strong> {{ studio.location }}</p>\r\n    <p><strong>Właściciel:</strong> {{ studio.ownerUsername }}</p>\r\n  \r\n    <h4>Usługi:</h4>\r\n    <ul>\r\n      <li *ngFor=\"let service of studio.service\">\r\n        <h5>{{ service.title }}</h5>\r\n        <p>{{ service.description }}</p>\r\n  \r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Studio } from '../services/model/studio.model';\r\nimport { StudioService } from '../services/studio.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-studio-main-page',\r\n    templateUrl: './studio-main-page.component.html',\r\n    styleUrls: ['./studio-main-page.component.css']\r\n})\r\nexport class StudioMainPageComponent implements OnInit {\r\n    hairdresserType : String = \"hairdresser\";\r\n    makeupType : String = \"makeup\";\r\n    allType : String = 'all';\r\n    presentedStudios: Studio[] = [];\r\n    allStudios : Studio[] = [];\r\n    hairdresserStudios: Studio[] = [];\r\n    makeupStudios: Studio[] = [];\r\n    studioType: String;\r\n    constructor(private studioService: StudioService,private route: ActivatedRoute){\r\n        this.studioService.getStudios().subscribe((s) => {\r\n            this.presentedStudios = s;\r\n            this.allStudios = s;\r\n            if(this.studioType === this.makeupType){\r\n                this.loadMakeupStudios();\r\n             }\r\n\r\n             if(this.studioType === this.hairdresserType){\r\n                this.loadHairdresserStudios();\r\n             }\r\n          });\r\n        \r\n    }\r\n    \r\n    ngOnInit(): void {\r\n        this.route.paramMap.subscribe(params => {\r\n             this.studioType = params.get('studioType');\r\n             if(this.studioType === this.makeupType){\r\n                this.loadMakeupStudios();\r\n             }\r\n\r\n             if(this.studioType === this.hairdresserType){\r\n                this.loadHairdresserStudios();\r\n             }\r\n\r\n             if(this.studioType === this.allType){\r\n                this.loadAllStudios();\r\n             }\r\n           \r\n        });\r\n    }\r\n\r\n    private loadHairdresserStudios(){\r\n        this.presentedStudios = this.allStudios.filter(studio => studio.type === this.hairdresserType);\r\n    }\r\n\r\n   \r\n    private loadMakeupStudios(){\r\n        this.presentedStudios = this.allStudios.filter(studio => studio.type === this.makeupType);\r\n    }\r\n\r\n    private loadAllStudios(){\r\n        this.presentedStudios = this.allStudios;\r\n    }\r\n    \r\n    getStudios(){\r\n\r\n    }\r\n\r\n}","\r\n<div *ngIf=\"(afAuth.user | async)\">\r\n    User is logged in\r\n\r\n    <br>\r\n    \r\n</div>\r\n<div *ngIf=\"!(afAuth.user | async)\">\r\n    User is not logged in\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    constructor(public afAuth: AngularFireAuth) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    logout(): void {\r\n        this.afAuth.signOut();\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Studio } from '../services/model/studio.model';\r\nimport { StudioService } from '../services/studio.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-studio-new',\r\n    templateUrl: './studio-new.component.html',\r\n    styleUrls: ['./studio-new.component.css']\r\n})\r\nexport class StudioNewComponent implements OnInit {\r\n    \r\n    studioForm: FormGroup;\r\n    serviceForm: FormGroup;\r\n    imageForm: FormGroup;\r\n    newStudio: Studio = {\r\n        studioName: \"\",\r\n        location:  \"\",\r\n        type: \"\",\r\n        ownerUsername: \"\",\r\n        service:[]\r\n      };\r\n    businessTypes: string[] = ['makeup', 'hairdresser', 'all']; \r\n\r\n    constructor(private studioService: StudioService, private router: Router){\r\n        this.studioForm = new FormGroup({\r\n            'studioName': new FormControl('', Validators.required),\r\n            'type': new FormControl('', Validators.required),\r\n            'location': new FormControl('', Validators.required),\r\n            'ownerUsername': new FormControl('', Validators.required)\r\n        });\r\n\r\n        this.serviceForm = new FormGroup({\r\n            'title': new FormControl('', Validators.required),\r\n            'description': new FormControl('', Validators.required),\r\n        });\r\n        this.imageForm = new FormGroup({\r\n            'file': new FormControl(['']),\r\n          });\r\n       \r\n    }\r\n    ngOnInit(): void {\r\n       \r\n    }\r\n\r\n    addStudio(){\r\n        console.log(this.studioForm);\r\n        console.log(this.newStudio)\r\n        this.newStudio.location = this.studioForm.value.location,\r\n        this.newStudio.type = this.studioForm.value.type,\r\n        this.newStudio.ownerUsername =  this.studioForm.value.ownerUsername,\r\n        this.newStudio.studioName = this.studioForm.value.studioName,\r\n        //console.log(this.newStudio)\r\n        this.studioService.addStudio(this.newStudio);   \r\n    }\r\n\r\n    addService(){\r\n        const newService = {\r\n            title: this.serviceForm.value.title,\r\n            description: this.serviceForm.value.description,\r\n            reservations: []\r\n          };\r\n        console.log(newService)\r\n        this.newStudio.service.push(newService)\r\n    }\r\n\r\n    deleteService(title: String, description: String){\r\n        this.newStudio.service = this.newStudio.service.filter(service => !(service.title === title &&  service.description === description));\r\n    }\r\n    onFileChange(event: Event){\r\n\r\n    }\r\n    uploadImage(){\r\n        \r\n    }\r\n}","\r\n<div class=\"main-content\">\r\n<div class=\"blurred-background\"></div>\r\n    <mat-card>\r\n        <H2>Dodajemy studio</H2>\r\n        <form [formGroup]=\"studioForm\" (ngSubmit)=\"addStudio()\" type=\"\">\r\n            <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Nazwa zakaładu</mat-label>\r\n                  <input autocomplete=\"off\" formControlName=\"studioName\" type=\"text\" matInput placeholder=\"Nazwa zakładu\">\r\n                </mat-form-field>\r\n            </p>\r\n\r\n            <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Typ zakładu</mat-label>\r\n                  \r\n                  <mat-select formControlName=\"type\">\r\n                    <mat-option *ngFor=\"let type of businessTypes\" [value]=\"type\">{{ type }}</mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n            </p>\r\n            \r\n            <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Lokalizacja</mat-label>\r\n                    <input autocomplete=\"off\" formControlName=\"location\" type=\"text\" matInput placeholder=\"Lokalizacja\">\r\n                </mat-form-field>\r\n            </p>\r\n\r\n            <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Właściciel</mat-label>\r\n                    <input autocomplete=\"off\" formControlName=\"ownerUsername\" type=\"text\" matInput placeholder=\"Właściciel\">\r\n                </mat-form-field>\r\n            </p>\r\n\r\n            <!-- <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Zdjęcie</mat-label>\r\n                    <input autocomplete=\"off\" formControlName=\"ownerUsername\" type=\"file\" matInput placeholder=\"Zdjęcie\">\r\n                    <button type=\"button\" >Upload Image</button>\r\n                </mat-form-field>\r\n            </p> -->\r\n            <!-- <form [formGroup]=\"imageForm\">\r\n                <mat-form-field>\r\n                  <mat-label>Upload Image</mat-label>\r\n                  <input type=\"file\" (change)=\"onFileChange($event)\" formControlName=\"file\">\r\n                </mat-form-field>\r\n                <button type=\"button\" (click)=\"uploadImage()\">Upload Image</button>\r\n              </form>\r\n            <p>Dodaj Usługi:</p> -->\r\n            \r\n            \r\n              \r\n             <div class=\"studio-card\" *ngFor=\"let service of newStudio.service\">\r\n                 <mat-card class=\"services-card\">\r\n                     <h5>{{ service.title }}</h5>\r\n                    <p>{{ service.description }}</p>\r\n                    <button mat-raised-button color=\"warn\" (click)=\"deleteService(service.title, service.description)\">Usuń</button>\r\n             </mat-card>\r\n                 <br>\r\n             </div>\r\n              \r\n               \r\n            <mat-card class=\"services-card\">\r\n                <form [formGroup]=\"serviceForm\" (ngSubmit)=\"addService()\" type=\"\">\r\n                    <h2>Tworzenie usługi</h2>\r\n                    <p>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Tytuł</mat-label>\r\n                            <input autocomplete=\"off\" formControlName=\"title\" type=\"text\" matInput placeholder=\"Tytuł\">\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Opis</mat-label>\r\n                            <input autocomplete=\"off\" formControlName=\"description\" type=\"text\" matInput placeholder=\"Opis\">\r\n                        </mat-form-field>\r\n                    </p>\r\n                \r\n                    <button mat-raised-button color=\"primary\">Dodaj usługę</button>\r\n            </form>\r\n    \r\n        </mat-card>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <button mat-raised-button color=\"primary\">Dodaj biznes</button>\r\n        </form>\r\n        \r\n</mat-card>\r\n","<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\" integrity=\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\" crossorigin=\"anonymous\">\r\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\r\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\r\n\r\n<nav class=\"navbar navbar-expand-md  custom-navbar sticky-top\">\r\n  <a class=\"navbar-brand custom-logo\" [routerLink]=\"['/studio-main-page', 'all']\">Booker</a>\r\n  <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navb\" aria-expanded=\"true\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div id=\"navb\" class=\"navbar-collapse collapse hide\">\r\n    <ul class=\"navbar-nav\">\r\n    \r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link custom-link\" [routerLink]=\"['/studio-main-page', 'hairdresser']\">Fryzjer</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link custom-link\" [routerLink]=\"['/studio-main-page', 'makeup']\">Makijaż</a>\r\n      </li>\r\n\r\n      <li *ngIf=\"(afAuth.user | async)\" class=\"nav-item\">\r\n        <a class=\"nav-link custom-link\" href=\"#\" routerLink=\"/studio-new\"><span class=\"fas fa-briefcase\"></span> Dodaj Biznes</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"nav navbar-nav ml-auto\">\r\n      \r\n      \r\n      <li *ngIf=\"!(afAuth.user | async)\" class=\"nav-item\">\r\n        <a class=\"nav-link custom-link\" href=\"#\" routerLink=\"/signup\"><span class=\"fas fa-user\"></span> Załóż konto</a>\r\n      </li>\r\n      <li *ngIf=\"!(afAuth.user | async)\" class=\"nav-item\">\r\n        <a class=\"nav-link custom-link\" href=\"#\" routerLink=\"/login\"><span class=\"fas fa-sign-in-alt\"></span> Zaloguj się</a>\r\n      </li>\r\n      <li *ngIf=\"user\" class=\"nav-item\">\r\n        <p class=\"nav-link custom-link\" >Witaj {{user.email}}! </p>\r\n      </li>\r\n      <li *ngIf=\"(afAuth.user | async)\" class=\"nav-item\" (click)=\"logout()\">\r\n        <a class=\"nav-link custom-link\" href=\"#\" routerLink=\"/login\" ><span class=\"fas fa-sign-in-alt\" ></span> Wyloguj</a>\r\n      </li>\r\n    \r\n    </ul>\r\n  </div>\r\n</nav>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport * as firebase from 'firebase/app'; // Import the 'firebase/app' module\r\n\r\n@Component({\r\n    selector: 'navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n\r\n    user: firebase.default.User | null;\r\n\r\n    constructor(public afAuth: AngularFireAuth) {\r\n        \r\n      afAuth.authState.subscribe(user => {\r\n        this.user = user;\r\n      });\r\n    }\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n\r\n    logout(): void {\r\n        this.afAuth.signOut();\r\n    }\r\n\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","Admin!\r\n\r\n<br>\r\n\r\n<button mat-raised-button color=\"primary\" routerLink=\"/home\">\r\n    Home\r\n</button>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'speedrun';\r\n}\r\n","<navbar></navbar>\r\n<router-outlet></router-outlet>\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { AngularFireDatabase } from '@angular/fire/database'; // Import AngularFireDatabase\r\n\r\nimport { Studio } from './model/studio.model';\r\nimport { Reservation } from './model/reservation.model';\r\nimport { Service } from './model/service.model';\r\nimport { Router } from '@angular/router';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudioService {\r\n    constructor(private db: AngularFireDatabase, private router: Router) {}\r\n\r\n    getStudios(): Observable<Studio[]> { // Specify the return type as User[]\r\n        return this.db.list('studios').valueChanges() as Observable<Studio[]>;\r\n      }\r\n\r\n      addStudio(studio: Studio) {\r\n        this.getNewId().then((newId) => {\r\n          this.db.list('studios').set(newId.toString(), studio)\r\n            .then(() => {\r\n              this.router.navigate(['/studio-main-page',studio.type]);      \r\n            })\r\n            .catch((error) => {\r\n              console.error('Error adding user:', error);\r\n            });\r\n        });\r\n      }\r\n    \r\n      getNewId(): Promise<number> {\r\n        return new Promise((resolve, reject) => {\r\n          this.db.list<number>('studios').query.once('value')\r\n            .then((snapshot) => {\r\n              let highestNumber = 0;\r\n    \r\n              snapshot.forEach((userSnapshot) => {\r\n                const userId = parseInt(userSnapshot.key, 10);\r\n                if (!isNaN(userId) && userId > highestNumber) {\r\n                  highestNumber = userId;\r\n                }\r\n              });\r\n    \r\n              const nextAvailableNumber = highestNumber + 1;\r\n              console.log('Next available number:', nextAvailableNumber);\r\n              resolve(nextAvailableNumber);\r\n            })\r\n            .catch((error) => {\r\n              console.error('Error fetching user data:', error);\r\n              reject(error);\r\n            });\r\n        });\r\n      }\r\n      \r\n     addTestStudio(){\r\n        const reservations: Reservation[] = [\r\n            {\r\n              username: 'user1',\r\n              confirmed: true,\r\n              startDate: '2023-10-01 08:30',\r\n              endDate: '2023-10-01 09:00'\r\n            },\r\n            {\r\n              username: 'user2',\r\n              confirmed: false,\r\n              startDate: '2023-10-01 09:30',\r\n              endDate: '2023-10-01 10:00'\r\n            },\r\n            // Add more reservations as needed...\r\n          ];\r\n          \r\n          // Sample Service objects\r\n          const services: Service[] = [\r\n            {\r\n              title: 'Service 1',\r\n              description: 'Description for Service 1',\r\n              reservations: reservations,\r\n            },\r\n            {\r\n              title: 'Service 2',\r\n              description: 'Description for Service 2',\r\n              reservations: [],\r\n            },\r\n            // Add more services as needed...\r\n          ];\r\n          \r\n          // Sample Studio object\r\n          const studio: Studio = {\r\n            studioName: 'name',\r\n            type: 'Studio Type',\r\n            location: 'Studio Location',\r\n            ownerUsername: 'owner123',\r\n            service: services,\r\n          };\r\n              \r\n          // Add the test user using the service\r\n          this.addStudio(studio);\r\n     } \r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { StudioMainPageComponent } from './studio/studio-main-page.component';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { environment } from '../app/environments/environment';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { NavbarComponent } from 'src/navbar/navbar.component';\r\nimport { StudioNewComponent } from './studio/studio-new.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n        SignupComponent,\r\n        LoginComponent,\r\n        DashboardComponent,\r\n        NavbarComponent,\r\n        StudioMainPageComponent,\r\n        StudioNewComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n\r\n        AngularFireModule.initializeApp(environment.firebaseConfig),  // imports firebase/app needed for everything\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatInputModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    userLoggedIn: boolean;      // other components can check on this variable for the login status of the user\r\n\r\n    constructor(private router: Router, private afAuth: AngularFireAuth) {\r\n        this.userLoggedIn = false;\r\n\r\n        this.afAuth.onAuthStateChanged((user) => {              // set up a subscription to always know the login status of the user\r\n            if (user) {\r\n                this.userLoggedIn = true;\r\n            } else {\r\n                this.userLoggedIn = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    loginUser(email: string, password: string): Promise<any> {\r\n        return this.afAuth.signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                console.log('Auth Service: loginUser: success');\r\n                // this.router.navigate(['/dashboard']);\r\n            })\r\n            .catch(error => {\r\n                console.log('Auth Service: login error...');\r\n                console.log('error code', error.code);\r\n                console.log('error', error);\r\n                if (error.code)\r\n                    return { isValid: false, message: error.message };\r\n            });\r\n    }\r\n\r\n    signupUser(user: any): Promise<any> {\r\n        return this.afAuth.createUserWithEmailAndPassword(user.email, user.password)\r\n            .then((result) => {\r\n                let emailLower = user.email.toLowerCase();\r\n                result.user.sendEmailVerification();                    // immediately send the user a verification email\r\n            })\r\n            .catch(error => {\r\n                console.log('Auth Service: signup error', error);\r\n                if (error.code)\r\n                    return { isValid: false, message: error.message };\r\n            });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service'\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n    selector: 'app-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n    signupForm: FormGroup;\r\n    firebaseErrorMessage: string;\r\n\r\n    constructor(private authService: AuthService, private router: Router, private afAuth: AngularFireAuth) {\r\n        this.firebaseErrorMessage = '';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.signupForm = new FormGroup({\r\n            'displayName': new FormControl('', Validators.required),\r\n            'email': new FormControl('', [Validators.required, Validators.email]),\r\n            'password': new FormControl('', Validators.required)\r\n        });\r\n    }\r\n\r\n    signup() {\r\n        if (this.signupForm.invalid)                            // if there's an error in the form, don't submit it\r\n            return;\r\n\r\n        this.authService.signupUser(this.signupForm.value).then((result) => {\r\n            if (result == null)                                 // null is success, false means there was an error\r\n                this.router.navigate(['/studio-main-page','all']);   \r\n            else if (result.isValid == false){\r\n                this.firebaseErrorMessage = result.message;\r\n            }\r\n        }).catch(() => {\r\n\r\n        });\r\n    }\r\n}\r\n","\r\n<div class=\"main-content\">\r\n    <div class=\"blurred-background\"></div>\r\n    <mat-card>\r\n        <h2>Utwórz nowe konto</h2> <!-- Added title -->\r\n        <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\">\r\n            <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Nazwa użytkownika</mat-label>\r\n                    <input autocomplete=\"off\" formControlName=\"displayName\" type=\"text\" matInput placeholder=\"Nazwa użytkownika\">\r\n                </mat-form-field>\r\n            </p>\r\n            <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input formControlName=\"email\" type=\"email\" matInput placeholder=\"Email\">\r\n                </mat-form-field>\r\n            </p>\r\n            <p>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Hasło</mat-label>\r\n                    <input autocomplete=\"off\" formControlName=\"password\" type=\"password\" matInput placeholder=\"Hasło\">\r\n                </mat-form-field>\r\n            </p>\r\n            <div *ngIf=\"firebaseErrorMessage != ''\" class=\"error-style\">\r\n                <span>{{ firebaseErrorMessage }}</span>\r\n            </div>\r\n    \r\n            <button mat-raised-button color=\"primary\">Zajerestruj</button>\r\n        </form>\r\n    </mat-card>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nimport { AuthGuard } from './services/auth.guard';\r\nimport { StudioMainPageComponent } from './studio/studio-main-page.component';\r\nimport { StudioNewComponent } from './studio/studio-new.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'studio-main-page/all', pathMatch: 'full' },\r\n    { path: 'studio-main-page/:studioType', component: StudioMainPageComponent },\r\n    { path: 'studio-new', component: StudioNewComponent, canActivate: [AuthGuard] },\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'signup', component: SignupComponent },\r\n    { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n    { path: '**', component: HomeComponent },                       // catch-all in case no other path matched\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service'\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { StudioService } from '../services/studio.service'; // Import your StudioService\r\nimport { Studio } from '../services/model/studio.model';\r\nimport { Service } from '../services/model/service.model';\r\nimport { Reservation } from '../services/model/reservation.model';\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    loginForm: FormGroup;\r\n    firebaseErrorMessage: string;\r\n\r\n    constructor(private authService: AuthService, private router: Router, private afAuth: AngularFireAuth, private studioService: StudioService) {\r\n        this.loginForm = new FormGroup({\r\n            'email': new FormControl('', [Validators.required, Validators.email]),\r\n            'password': new FormControl('', Validators.required)\r\n        });\r\n\r\n        this.firebaseErrorMessage = '';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n\r\n    loginUser() {\r\n\r\n       \r\n        if (this.loginForm.invalid)\r\n            return;\r\n\r\n        this.authService.loginUser(this.loginForm.value.email, this.loginForm.value.password).then((result) => {\r\n            if (result == null) {                               // null is success, false means there was an error\r\n                console.log('logging in...');\r\n                this.router.navigate(['/studio-main-page','all']);                // when the user is logged in, navigate them to dashboard\r\n            }\r\n            else if (result.isValid == false) {\r\n                console.log('login error', result);\r\n                this.firebaseErrorMessage = result.message;\r\n                this.router.navigate(['/studio-main-page','all']);   \r\n            }\r\n        });\r\n    }\r\n}\r\n","\r\n<div class=\"main-content\">\r\n    <div class=\"blurred-background\"></div>\r\n    <mat-card>\r\n        <h2>Zaloguj się, aby rozpocząć</h2> <!-- Added title -->\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\" type=\"\">\r\n                <p>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input autocomplete=\"off\" formControlName=\"email\" type=\"email\" matInput placeholder=\"Email\">\r\n                    </mat-form-field>\r\n                </p>\r\n                <p>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Hasło</mat-label>\r\n                        <input autocomplete=\"off\" formControlName=\"password\" type=\"password\" matInput placeholder=\"Hasło\">\r\n                    </mat-form-field>\r\n                </p>\r\n                <div *ngIf=\"firebaseErrorMessage != ''\" class=\"error-style\">\r\n                    <span>{{ firebaseErrorMessage }}</span>\r\n                </div>\r\n        \r\n                <button mat-raised-button color=\"primary\">Zaloguj</button>\r\n            </form>\r\n        </mat-card>\r\n   \r\n</div>\r\n","export const environment = {\r\n    production: false,\r\n    firebaseConfig : {\r\n        apiKey: \"AIzaSyDbJ49nyz5Otq0XIl9dUjsTg9f-QtiJi78\",\r\n        authDomain: \"nailbooker.firebaseapp.com\",\r\n        databaseURL: \"https://nailbooker-default-rtdb.europe-west1.firebasedatabase.app\",\r\n        projectId: \"nailbooker\",\r\n        storageBucket: \"nailbooker.appspot.com\",\r\n        messagingSenderId: \"522130802424\",\r\n        appId: \"1:522130802424:web:e381bdf20e1e5a69ed1d0d\",\r\n        measurementId: \"G-MW030Y6MDN\"\r\n      }\r\n  };","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from '../src/app/environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}